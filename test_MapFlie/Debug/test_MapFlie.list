
test_MapFlie.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001a0  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000004  08000364  08000364  00010364  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000368  08000368  00020008  2**0
                  CONTENTS
  4 .ARM          00000000  08000368  08000368  00020008  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000368  08000368  00020008  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000368  08000368  00010368  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800036c  0800036c  0001036c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000008  20000000  08000370  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000024  20000008  08000378  00020008  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000002c  08000378  0002002c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020008  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000189  00000000  00000000  00020032  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000bb  00000000  00000000  000201bb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000048  00000000  00000000  00020278  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000030  00000000  00000000  000202c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000f28  00000000  00000000  000202f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000478  00000000  00000000  00021218  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003a84  00000000  00000000  00021690  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00025114  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000064  00000000  00000000  00025164  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000008 	.word	0x20000008
 80001e0:	00000000 	.word	0x00000000
 80001e4:	0800034c 	.word	0x0800034c

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	2000000c 	.word	0x2000000c
 8000200:	0800034c 	.word	0x0800034c

08000204 <main>:
uint8_t a[4] = {0xAA, 0xAA, 0xAA, 0xAA};
const uint8_t b[4] ={0xBB,0xBB,0xBB,0xBB};
uint8_t c[4];

int main(void)
{
 8000204:	b480      	push	{r7}
 8000206:	b085      	sub	sp, #20
 8000208:	af00      	add	r7, sp, #0
	uint8_t d[4] = {0x01,0x02,0x03,0x04};
 800020a:	4b23      	ldr	r3, [pc, #140]	; (8000298 <main+0x94>)
 800020c:	603b      	str	r3, [r7, #0]
	static uint8_t e[4] = {0xFF,0xFF,0xFF,0xFF};
	static uint8_t f[4];
	uint8_t sum = 0;
 800020e:	2300      	movs	r3, #0
 8000210:	73fb      	strb	r3, [r7, #15]
	for(int i = 0; i < 5; i++){
 8000212:	2300      	movs	r3, #0
 8000214:	60bb      	str	r3, [r7, #8]
 8000216:	e021      	b.n	800025c <main+0x58>
		sum += a[i] + b[i] + c[i] + d[i] + e[i];
 8000218:	4a20      	ldr	r2, [pc, #128]	; (800029c <main+0x98>)
 800021a:	68bb      	ldr	r3, [r7, #8]
 800021c:	4413      	add	r3, r2
 800021e:	781a      	ldrb	r2, [r3, #0]
 8000220:	491f      	ldr	r1, [pc, #124]	; (80002a0 <main+0x9c>)
 8000222:	68bb      	ldr	r3, [r7, #8]
 8000224:	440b      	add	r3, r1
 8000226:	781b      	ldrb	r3, [r3, #0]
 8000228:	4413      	add	r3, r2
 800022a:	b2da      	uxtb	r2, r3
 800022c:	491d      	ldr	r1, [pc, #116]	; (80002a4 <main+0xa0>)
 800022e:	68bb      	ldr	r3, [r7, #8]
 8000230:	440b      	add	r3, r1
 8000232:	781b      	ldrb	r3, [r3, #0]
 8000234:	4413      	add	r3, r2
 8000236:	b2da      	uxtb	r2, r3
 8000238:	4639      	mov	r1, r7
 800023a:	68bb      	ldr	r3, [r7, #8]
 800023c:	440b      	add	r3, r1
 800023e:	781b      	ldrb	r3, [r3, #0]
 8000240:	4413      	add	r3, r2
 8000242:	b2da      	uxtb	r2, r3
 8000244:	4918      	ldr	r1, [pc, #96]	; (80002a8 <main+0xa4>)
 8000246:	68bb      	ldr	r3, [r7, #8]
 8000248:	440b      	add	r3, r1
 800024a:	781b      	ldrb	r3, [r3, #0]
 800024c:	4413      	add	r3, r2
 800024e:	b2da      	uxtb	r2, r3
 8000250:	7bfb      	ldrb	r3, [r7, #15]
 8000252:	4413      	add	r3, r2
 8000254:	73fb      	strb	r3, [r7, #15]
	for(int i = 0; i < 5; i++){
 8000256:	68bb      	ldr	r3, [r7, #8]
 8000258:	3301      	adds	r3, #1
 800025a:	60bb      	str	r3, [r7, #8]
 800025c:	68bb      	ldr	r3, [r7, #8]
 800025e:	2b04      	cmp	r3, #4
 8000260:	ddda      	ble.n	8000218 <main+0x14>
	}

	for(int j = 0; j < 5; j++){
 8000262:	2300      	movs	r3, #0
 8000264:	607b      	str	r3, [r7, #4]
 8000266:	e00e      	b.n	8000286 <main+0x82>
		f[j] += sum;
 8000268:	4a10      	ldr	r2, [pc, #64]	; (80002ac <main+0xa8>)
 800026a:	687b      	ldr	r3, [r7, #4]
 800026c:	4413      	add	r3, r2
 800026e:	781a      	ldrb	r2, [r3, #0]
 8000270:	7bfb      	ldrb	r3, [r7, #15]
 8000272:	4413      	add	r3, r2
 8000274:	b2d9      	uxtb	r1, r3
 8000276:	4a0d      	ldr	r2, [pc, #52]	; (80002ac <main+0xa8>)
 8000278:	687b      	ldr	r3, [r7, #4]
 800027a:	4413      	add	r3, r2
 800027c:	460a      	mov	r2, r1
 800027e:	701a      	strb	r2, [r3, #0]
	for(int j = 0; j < 5; j++){
 8000280:	687b      	ldr	r3, [r7, #4]
 8000282:	3301      	adds	r3, #1
 8000284:	607b      	str	r3, [r7, #4]
 8000286:	687b      	ldr	r3, [r7, #4]
 8000288:	2b04      	cmp	r3, #4
 800028a:	dded      	ble.n	8000268 <main+0x64>
 800028c:	2300      	movs	r3, #0
	}
}
 800028e:	4618      	mov	r0, r3
 8000290:	3714      	adds	r7, #20
 8000292:	46bd      	mov	sp, r7
 8000294:	bc80      	pop	{r7}
 8000296:	4770      	bx	lr
 8000298:	04030201 	.word	0x04030201
 800029c:	20000000 	.word	0x20000000
 80002a0:	08000364 	.word	0x08000364
 80002a4:	20000024 	.word	0x20000024
 80002a8:	20000004 	.word	0x20000004
 80002ac:	20000028 	.word	0x20000028

080002b0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002b0:	480d      	ldr	r0, [pc, #52]	; (80002e8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002b2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002b4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002b8:	480c      	ldr	r0, [pc, #48]	; (80002ec <LoopForever+0x6>)
  ldr r1, =_edata
 80002ba:	490d      	ldr	r1, [pc, #52]	; (80002f0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002bc:	4a0d      	ldr	r2, [pc, #52]	; (80002f4 <LoopForever+0xe>)
  movs r3, #0
 80002be:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002c0:	e002      	b.n	80002c8 <LoopCopyDataInit>

080002c2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002c2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002c4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002c6:	3304      	adds	r3, #4

080002c8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002c8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002ca:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002cc:	d3f9      	bcc.n	80002c2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ce:	4a0a      	ldr	r2, [pc, #40]	; (80002f8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002d0:	4c0a      	ldr	r4, [pc, #40]	; (80002fc <LoopForever+0x16>)
  movs r3, #0
 80002d2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002d4:	e001      	b.n	80002da <LoopFillZerobss>

080002d6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002d6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002d8:	3204      	adds	r2, #4

080002da <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002da:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002dc:	d3fb      	bcc.n	80002d6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002de:	f000 f811 	bl	8000304 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002e2:	f7ff ff8f 	bl	8000204 <main>

080002e6 <LoopForever>:

LoopForever:
  b LoopForever
 80002e6:	e7fe      	b.n	80002e6 <LoopForever>
  ldr   r0, =_estack
 80002e8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002ec:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002f0:	20000008 	.word	0x20000008
  ldr r2, =_sidata
 80002f4:	08000370 	.word	0x08000370
  ldr r2, =_sbss
 80002f8:	20000008 	.word	0x20000008
  ldr r4, =_ebss
 80002fc:	2000002c 	.word	0x2000002c

08000300 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000300:	e7fe      	b.n	8000300 <ADC_IRQHandler>
	...

08000304 <__libc_init_array>:
 8000304:	b570      	push	{r4, r5, r6, lr}
 8000306:	4d0d      	ldr	r5, [pc, #52]	; (800033c <__libc_init_array+0x38>)
 8000308:	4c0d      	ldr	r4, [pc, #52]	; (8000340 <__libc_init_array+0x3c>)
 800030a:	1b64      	subs	r4, r4, r5
 800030c:	10a4      	asrs	r4, r4, #2
 800030e:	2600      	movs	r6, #0
 8000310:	42a6      	cmp	r6, r4
 8000312:	d109      	bne.n	8000328 <__libc_init_array+0x24>
 8000314:	4d0b      	ldr	r5, [pc, #44]	; (8000344 <__libc_init_array+0x40>)
 8000316:	4c0c      	ldr	r4, [pc, #48]	; (8000348 <__libc_init_array+0x44>)
 8000318:	f000 f818 	bl	800034c <_init>
 800031c:	1b64      	subs	r4, r4, r5
 800031e:	10a4      	asrs	r4, r4, #2
 8000320:	2600      	movs	r6, #0
 8000322:	42a6      	cmp	r6, r4
 8000324:	d105      	bne.n	8000332 <__libc_init_array+0x2e>
 8000326:	bd70      	pop	{r4, r5, r6, pc}
 8000328:	f855 3b04 	ldr.w	r3, [r5], #4
 800032c:	4798      	blx	r3
 800032e:	3601      	adds	r6, #1
 8000330:	e7ee      	b.n	8000310 <__libc_init_array+0xc>
 8000332:	f855 3b04 	ldr.w	r3, [r5], #4
 8000336:	4798      	blx	r3
 8000338:	3601      	adds	r6, #1
 800033a:	e7f2      	b.n	8000322 <__libc_init_array+0x1e>
 800033c:	08000368 	.word	0x08000368
 8000340:	08000368 	.word	0x08000368
 8000344:	08000368 	.word	0x08000368
 8000348:	0800036c 	.word	0x0800036c

0800034c <_init>:
 800034c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800034e:	bf00      	nop
 8000350:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000352:	bc08      	pop	{r3}
 8000354:	469e      	mov	lr, r3
 8000356:	4770      	bx	lr

08000358 <_fini>:
 8000358:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800035a:	bf00      	nop
 800035c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800035e:	bc08      	pop	{r3}
 8000360:	469e      	mov	lr, r3
 8000362:	4770      	bx	lr
