/*
 * bsp.h
 *	@brief: this is a Board Supported Package for stm32F446RF
 *  Created on: Jan 22, 2024
 *      Author: Sayed
 */

#ifndef INC_BSP_H_
#define INC_BSP_H_

#include <stdint.h>

#define __vo  volatile
/*BASE addresses of flash and ram memory*/
#define FLASH_BASEADRR			( 0x08000000U)
#define SRAM1_BASEADDR			( 0x20000000U)
#define SRAM2_BASEADDR			( 0x2001C000U)
#define ROM_BASEADDR			( 0x1FFF0000U)
#define RAM_BASEADDR   			SRAM1_BASEADDR

/*Base addresses of the different BUSEs in the MCU*/
#define BUSPREF_BASEADDR   		( 0x40000000U)
#define ABP1PREF_BASEADDR  		BUSPREF_BASEADDR
#define APB2PREF_BASEADDR  		( 0x40010000U)
#define AHB1PREF_BASEADDR  		( 0x40020000U)
#define AHB2PREF_BASEADDR  		( 0x50000000U)
#define AHB3PREF_BASEADDR  		( 0xA0001000U)

/*Peripherals connected to the ABP1 BUS*/
#define TIM2_BASEADDR			( 0x40000000U)
#define TIM3_BASEADDR   		( 0x40000400U)
#define TIM4_BASEADDR			( 0x40000800U)
#define TIM5_BASEADDR   		( 0x40000C00U)
#define TIM6_BASEADDR   		( 0x40001000U)
#define TIM7_BASEADDR   		( 0x40001400U)
#define TIM12_BASEADDR  		( 0x40001800U)
#define TIM13_BASEADDR  		( 0x40001C00U)
#define TIM14_BASEADDR  		( 0x40002000U)
#define RTCBKP_BASEADDR 		( 0x40002800U)
#define WWDG_BASEADDR			( 0x40002C00U)
#define IWDG_BASEADDR   		( 0x40003000U)
#define SPI2I2S2_BASEADDR 		( 0x40003800U)
#define SPI3I2S3_BASEADDR 		( 0x40003C00U)
#define SPDIFRX_BASEADDR 		( 0x40004000U)
#define USART2_BASEADDR  		( 0x40004400U)
#define USART3_BASEADDR  		( 0x40004800U)
#define UART4_BASEADDR  		( 0x40004C00U)
#define UART5_BASEADDR  		( 0x40005000U)
#define I2C1_BASEADDR 			( 0x40005400U)
#define I2C2_BASEADDR  			( 0x40005800U)
#define I2C3_BASEADDR  			( 0x40005C00U)
#define FMPI2C1_BASEADDR 		( 0x40006000u)
#define CAN1_BASEADDR 			( 0x40006400U)
#define CAN2_BASEADDR 			( 0x40006800U)
#define HDMICEC_BASEADDR 		( 0x40006C00U)
#define PWE_BASEADDR 			( 0x40007000U)
#define DAC_BASEADDR  			( 0x40007400U)

/*Peripherals connected to the ABP2 BUS*/
#define TIM1_BASEADDR 			( 0x40010000U)
#define TIM8_BASEADDR  			( 0x40010400U)
#define USART1_BASEADDR 		( 0x40011000U)
#define USART6_BASEADDR 		( 0x40011400U)
#define ADC123_BASEADDR 		( 0x40012000U)
#define SDI0_BASEADDR 			( 0x40012C00U)
#define SPI1_BASEADDR 			( 0x40013000U)
#define SPI4_BASEADDR 			( 0x40013400U)
#define SYSCFG_BASEADDR 		( 0x40013800U)
#define EXTI_BASEADDR 			( 0x40013C00U)
#define TIM9_BASEADDR 			( 0x40014000U)
#define TIM10_BASEADDR 			( 0x40014400U)
#define TIM11_BASEADDR 			( 0x40014800U)
#define SAI1_BASEADDR 			( 0x40015800U)
#define SAI2_BASEADDR 			( 0x40015C00U)

/*Peripherals connected to the AHP1 BUS*/
#define GPIOA_BASEADDR 			( 0x40020000U)
#define GPIOB_BASEADDR 			( 0x40020400U)
#define GPIOC_BASEADDR 			( 0x40020800U)
#define GPIOD_BASEADDR 			( 0x40020C00U)
#define GPIOE_BASEADDR 			( 0x40021000U)
#define GPIOF_BASEADDR 			( 0x40021400U)
#define GPIOG_BASEADDR 			( 0x40021800U)
#define GPIOH_BASEADDR 			( 0x40021C00U)
#define CRC_BASEADDR 			( 0x40023000U)
#define RCC_BASEADDR 			( 0x40023800U)
#define FLASHINTRE_BASEADDR 	( 0x40023C00U)
#define BKPSRAM_BASEADDR 		( 0x40024000U)
#define DMA1_BASEADDR 			( 0x40026000U)
#define DMA2_BASEADDR 			( 0x40026400U)
#define USBOTGHS_BASEARRD 		( 0x40040000U)

/*Peripherals connected to the AHP2 BUS*/
#define USBOTGFS_BASEADDR 		( 0x50000000U)
#define DCMI_BASEADDR 			( 0x50050000U)

/*Peripherals connected to the AHP3 BUS*/
#define FMCBANK1_BASEADDR 		( 0x60000000U)
#define FMCBANK3_BASEADDR 		( 0x80000000U)
#define QUADSPI_BASEADDR  		( 0x90000000U)
#define FMCCNTRE_BASEADDR 		( 0xA0000000U)
#define QUADSPICNTRE_BASEADDR 	( 0xA0001000U)
#define FMCBANK5_BASEADDR 		( 0xC0000000U)
#define FMC6BANK_BASEADDR 		( 0xD0000000U)
#define M4INTPREF_BASEADDR 		( 0xE0000000U)

/*structures for various peripherals*/
typedef struct {
	uint32_t __vo MODER;
	uint32_t __vo OTYPER;
	uint32_t __vo OSPEEDER;
	uint32_t __vo PUPDR;
	uint32_t __vo IDR;
	uint32_t __vo ODR;
	uint32_t __vo BSRR;
	uint32_t __vo LCKR;
	uint32_t __vo AFRL;
	uint32_t __vo AFRH;
}GPIO_type;

typedef struct {
	uint32_t __vo CR;
	uint32_t __vo PLLCFGR;
	uint32_t __vo CFGR;
	uint32_t __vo CIR;
	uint32_t __vo AHB1RSTR;
	uint32_t __vo AHB2RSTR;
	uint32_t __vo AHB3RSTR;
	uint32_t      RESERVED0;
	uint32_t __vo APB1RSTR;
	uint32_t __vo APB2RSTR;
	uint32_t      RESERVED1[2];
	uint32_t __vo AHB1ENR;
	uint32_t __vo AHB2ENR;
	uint32_t __vo AHB3ENR;
	uint32_t      RESERVED2;
	uint32_t __vo APB1ENR;
	uint32_t __vo APB2ENR;
	uint32_t      RESERVED3[2];
	uint32_t __vo AHB1LPENR;
	uint32_t __vo AHB2LPENR;
	uint32_t __vo AHB3LPENR;
	uint32_t      RESERVED4;
	uint32_t __vo APB1LPENR;
	uint32_t __vo APB2LPENR;
	uint32_t      RESERVED5[2];
	uint32_t __vo BDCR;
	uint32_t __vo CSR;
	uint32_t      RESERVED6[2];
	uint32_t __vo SSCGR;
	uint32_t __vo PLLI2SCFGR;
	uint32_t __vo PLLSAICFGR;
	uint32_t __vo DCKCFGR;
	uint32_t __vo CKGATENR;
	uint32_t __vo DCKCFGR2;

}RCC_type;



/*Peripherals definitions */

#define GPIOA 	((GPIO_type *) GPIOA_BASEADDR)
#define GPIOB 	((GPIO_type *) GPIOB_BASEADDR)
#define GPIOC 	((GPIO_type *) GPIOC_BASEADDR)
#define GPIOD 	((GPIO_type *) GPIOD_BASEADDR)
#define GPIOE 	((GPIO_type *) GPIOE_BASEADDR)
#define GPIOF 	((GPIO_type *) GPIOF_BASEADDR)
#define GPIOG 	((GPIO_type *) GPIOG_BASEADDR)
#define GPIOH 	((GPIO_type *) GPIOH_BASEADDR)
#define RCC     ((RCC_type  *) RCC_BASEADDR)












/*clock enable macros for GPIOs*/
#define GPIOA_CLKEN   (RCC -> AHB1ENR |= (1 << 0))
#define GPIOB_CLKEN   (RCC -> AHB1ENR |= (1 << 1))
#define GPIOC_CLKEN   (RCC -> AHB1ENR |= (1 << 2))
#define GPIOD_CLKEN   (RCC -> AHB1ENR |= (1 << 3))
#define GPIOE_CLKEN   (RCC -> AHB1ENR |= (1 << 4))
#define GPIOF_CLKEN   (RCC -> AHB1ENR |= (1 << 5))
#define GPIOG_CLKEN   (RCC -> AHB1ENR |= (1 << 6))
#define GPIOH_CLKEN   (RCC -> AHB1ENR |= (1 << 7))


/*clock enable macros for I2Cs*/
#define I2C1_CLKEN    (RCC -> APB1ENR |= (1 << 21))
#define I2C2_CLKEN    (RCC -> APB1ENR |= (1 << 22))
#define I2C3_CLKEN    (RCC -> APB1ENR |= (1 << 23))


/*clock enable macros for SPIs*/
#define SPI1_CLKEN    (RCC -> APB2ENR |= (1 << 12))
#define SPI2_CLKEN    (RCC -> APB1ENR |= (1 << 14))
#define SPI3_CLKEN    (RCC -> APB1ENR |= (1 << 15))
#define SPI4_CLKEN    (RCC -> APB2ENR |= (1 << 13))


/*clock enable macros for USARTs*/
#define USART1_CLKEN    (RCC -> APB2ENR |= (1 << 4))
#define USART1_CLKEN    (RCC -> APB1ENR |= (1 << 17))
#define USART1_CLKEN    (RCC -> APB1ENR |= (1 << 18))


/*clock enable macros for SYSCFGs*/
#define SYSCFG1_CLKEN    (RCC -> APB2ENR |= (1 << 14))


/*clock disable macros for GPIOs*/
#define GPIOA_CLKDI   (RCC -> AHB1ENR &= ~(1 << 0))
#define GPIOB_CLKDI   (RCC -> AHB1ENR &= ~(1 << 1))
#define GPIOC_CLKDI   (RCC -> AHB1ENR &= ~(1 << 2))
#define GPIOD_CLKDI   (RCC -> AHB1ENR &= ~(1 << 3))
#define GPIOE_CLKDI   (RCC -> AHB1ENR &= ~(1 << 4))
#define GPIOF_CLKDI   (RCC -> AHB1ENR &= ~(1 << 5))
#define GPIOG_CLKDI   (RCC -> AHB1ENR &= ~(1 << 6))
#define GPIOH_CLKDI   (RCC -> AHB1ENR &= ~(1 << 7))


/*clock disable macros for I2Cs*/
#define I2C1_CLKDI    (RCC -> APB1ENR &= ~(1 << 21))
#define I2C2_CLKDI    (RCC -> APB1ENR &= ~(1 << 22))
#define I2C3_CLKDI    (RCC -> APB1ENR &= ~(1 << 23))


/*clock disable macros for SPIs*/
#define SPI1_CLKDI    (RCC -> APB2ENR &= ~(1 << 12))
#define SPI2_CLKDI    (RCC -> APB1ENR &= ~(1 << 14))
#define SPI3_CLKDI    (RCC -> APB1ENR &= ~(1 << 15))
#define SPI4_CLKDI    (RCC -> APB2ENR &= ~(1 << 13))


/*clock disable macros for USARTs*/
#define USART1_CLKDI    (RCC -> APB2ENR &= ~(1 << 4))
#define USART1_CLKDI    (RCC -> APB1ENR &= ~(1 << 17))
#define USART1_CLKDI    (RCC -> APB1ENR &= ~(1 << 18))


/*clock disable macros for SYSCFGs*/
#define SYSCFG1_CLKDI    (RCC -> APB2ENR &= ~(1 << 14))

#endif /* INC_BSP_H_ */
