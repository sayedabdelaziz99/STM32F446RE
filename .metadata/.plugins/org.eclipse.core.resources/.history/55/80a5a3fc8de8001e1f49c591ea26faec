/*
 * RTC.c
 *
 *  Created on: Mar 22, 2024
 *      Author: Sayed
 */
#include "STMF446RE.h"
#include "RTC_driver.h"
#include "I2C_driver.h"

#define I2C_SR1_TXE_Pos        7U
#define I2C_SR1_TXE_Msk        (0x1UL << I2C_SR1_TXE_Pos)
#define I2C_SR1_SB_Pos         0U
#define I2C_SR1_SB_Msk         (0x1UL << I2C_SR1_SB_Pos)
#define I2C_CR1_START_Pos      8U
#define I2C_CR1_START_Msk      (0x1UL << I2C_CR1_START_Pos)
#define I2C_CR1_ACK_Pos        10U
#define I2C_CR1_ACK_Msk        (0x1UL << I2C_CR1_ACK_Pos)
#define I2C_SR1_RXNE_Pos       6U
#define I2C_SR1_RXNE_Msk       (0x1UL << I2C_SR1_RXNE_Pos)

void I2C_Start(void);
void I2C_Write(uint8_t data);
uint8_t I2C_Read(uint8_t ack);

void RTC_ReadtTime(I2C_Handle *pI2C_Handle, uint8_t SlaveAddress, uint8_t *pDataBuffer){
	//Start the reading from RTC buy making a dummy write first
	 // Send start condition
	        I2C_Start();

	        // Send DS1307 address with write mode
	        I2C_Write((SlaveAddress << 1) | 0x00); // Write mode

	        // Send register address to read (0x00 for seconds)
	        I2C_Write(0x00);

	        // Send repeated start condition
	        I2C_Start();

	        // Send DS1307 address with read mode
	        I2C_Write((SlaveAddress << 1) | 0x01); // Read mode

	        // Read seconds from DS1307
	         *pDataBuffer = I2C_Read(0);
}
void I2C_Start(void) {
    I2C1->CR1 |= I2C_CR1_START_Msk; // Generate start condition
    while (!(I2C1->SR1 & I2C_SR1_SB_Msk)); // Wait until start condition is generated
}
void I2C_Write(uint8_t data) {
    I2C1->DR = data; // Write data to data register
    while (!(I2C1->SR1 & I2C_SR1_TXE_Msk)); // Wait until data is transmitted
}

uint8_t I2C_Read(uint8_t ack) {
    uint8_t data;

    if (ack) {
        I2C1->CR1 |= I2C_CR1_ACK_Msk; // Enable ACK
    } else {
        I2C1->CR1 &= ~I2C_CR1_ACK_Msk; // Disable ACK
    }

    while (!(I2C1->SR1 & I2C_SR1_RXNE_Msk)); // Wait until data is received
    data = I2C1->DR; // Read received data

    return data;
}



